/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import FC.Cryptage;
import FC.DbConnection;
import FC.Personnel;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;

public class Connexion extends javax.swing.JFrame {

    static Personnel p = new Personnel();

    Cryptage cr = new Cryptage(15);

    public Connexion() {
        initComponents();
        this.setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTextField_identifiant = new javax.swing.JTextField();
        jPasswordField = new javax.swing.JPasswordField();
        ConBt = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        newBt = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(236, 187, 32), 2));

        jTextField_identifiant.setFont(new java.awt.Font("Lucida Grande", 2, 13)); // NOI18N
        jTextField_identifiant.setText("Identifiant");
        jTextField_identifiant.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField_identifiantMouseClicked(evt);
            }
        });
        jTextField_identifiant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_identifiantActionPerformed(evt);
            }
        });
        jTextField_identifiant.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField_identifiantKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField_identifiantKeyPressed(evt);
            }
        });

        jPasswordField.setText("jPasswordField1");
        jPasswordField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPasswordFieldMouseClicked(evt);
            }
        });

        ConBt.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        ConBt.setText("SE CONNECTER");
        ConBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConBtActionPerformed(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Premi√®re connexion ?");

        newBt.setBackground(new java.awt.Color(255, 255, 255));
        newBt.setFont(new java.awt.Font("Lucida Grande", 2, 13)); // NOI18N
        newBt.setForeground(new java.awt.Color(6, 69, 173));
        newBt.setText("Cliquez ici");
        newBt.setBorder(null);
        newBt.setBorderPainted(false);
        newBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newBtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ConBt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPasswordField)
                    .addComponent(jTextField_identifiant, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(newBt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {ConBt, jPasswordField, jTextField_identifiant});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jTextField_identifiant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(ConBt, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(newBt))
                .addGap(18, 18, 18))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel2, jPasswordField, jTextField_identifiant, newBt});

        jPanel2.setBackground(new java.awt.Color(236, 187, 32));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("CONNEXION");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 54, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField_identifiantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_identifiantActionPerformed
        
    }//GEN-LAST:event_jTextField_identifiantActionPerformed

    private void ConBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConBtActionPerformed

        String mdpEntered = jPasswordField.getText();
        String idEntered = jTextField_identifiant.getText();
        String q = "SELECT * FROM personnel WHERE (Identifiant = '" + idEntered + "')";

        DbConnection c = new DbConnection();
        boolean b = c.connexionB();
        // Si la connexion √† la BD est bien assur√©e ... 
        if (b) {
            try {
                // On retourne les infos personnel de celui qui s'identifie 
                ResultSet rs = c.select(q);
                while (rs.next()) {
                    String nom = rs.getString("Nom");
                    String prenom = rs.getString("Prenom");
                    String token = rs.getString("Token");
                    String spe = rs.getString("Sp√©cialit√©");

                    boolean auth = cr.authenticate(mdpEntered.toCharArray(), token);

                    // On v√©rifie que le personnel qui s'identifie existe dans la BD
                    if (rs != null) {
                        // Authentification du MDP crypt√© dans la BDD
                        if (auth) {
                            // Ouverture d'une nouvelle fen√™tre d'accueil en fonction du m√©tier
                            switch (spe) {
                                case "MEDECIN":
                                    // On rempli l'objet Personnel du personnel qui se connecte
                                    p.setNom(nom);
                                    p.setPrenom(prenom);
                                    Medecin_Accueil aM = new Medecin_Accueil();
                                    // On lance la fen√™tre Accueil du personnel qui se connecte
                                    this.setVisible(false);
                                    aM.setVisible(true);
                                    break;
                                case "SECRET":
                                    p.setNom(nom);
                                    p.setPrenom(prenom);
                                    Secretaire_Accueil aS = new Secretaire_Accueil();
                                    this.setVisible(false);
                                    aS.setVisible(true);
                                    break;
                                case "INTERN":
                                    p.setNom(nom);
                                    p.setPrenom(prenom);
                                    this.setVisible(false);
                                    Manipulateur_Accueil aI = new Manipulateur_Accueil();
                                    aI.setVisible(true);
                                    break;
                                case "MANIP":
                                    p.setNom(nom);
                                    p.setPrenom(prenom);
                                    this.setVisible(false);
                                    Manipulateur_Accueil aMP = new Manipulateur_Accueil();
                                    aMP.setVisible(true);
                                    break;
                                case "DECO":
                                    break;
                                default:
                                    throw new AssertionError();
                            }
                        } else {
                            JOptionPane.showMessageDialog(this, "Connexion impossible : \t Mot de passe √©ronn√© \n\t\tVeuillez r√©essayer");
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Connexion impossible : \t Identifiant √©ronn√© \n\t\tVeuillez r√©essayer");
                    }
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
                ex.getSQLState();
                ex.getCause();
                ex.getErrorCode();
                JOptionPane.showMessageDialog(this, "Votre identifiant et/ou votre mot de passe sont erron√©s \n Veuillez r√©essayer", "Erreur", JOptionPane.WARNING_MESSAGE);
            } finally {
                c.close();
            }
        }
    }//GEN-LAST:event_ConBtActionPerformed

    private void jTextField_identifiantMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField_identifiantMouseClicked
        jTextField_identifiant.setText("");
    }//GEN-LAST:event_jTextField_identifiantMouseClicked

    private void jPasswordFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPasswordFieldMouseClicked
        jPasswordField.setText("");
    }//GEN-LAST:event_jPasswordFieldMouseClicked

    private void newBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newBtActionPerformed
        Initialiser_MDP iMP = new Initialiser_MDP();
        iMP.setVisible(true);
    }//GEN-LAST:event_newBtActionPerformed

    private void jTextField_identifiantKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_identifiantKeyPressed
        
    }//GEN-LAST:event_jTextField_identifiantKeyPressed

    private void jTextField_identifiantKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_identifiantKeyTyped
    }//GEN-LAST:event_jTextField_identifiantKeyTyped

    public static Personnel getP() {
        return p;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Connexion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Connexion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Connexion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Connexion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Connexion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ConBt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPasswordField jPasswordField;
    private javax.swing.JTextField jTextField_identifiant;
    private javax.swing.JButton newBt;
    // End of variables declaration//GEN-END:variables
}

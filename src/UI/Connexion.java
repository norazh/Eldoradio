/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import FC.Cryptage;
import FC.DbConnection;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.BadPaddingException;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.NoSuchPaddingException;
import javax.swing.JOptionPane;

/**
 *
 * @author noraz
 */
public class Connexion extends javax.swing.JFrame {

    /**
     * Creates new form Connexion2
     */
    public Connexion() {
        initComponents();
        this.setResizable(false);
        jPanel2.requestFocusInWindow();

        jTextField_identifiant.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                if (jTextField_identifiant.getText().equals("Identifiant")) {
                    jTextField_identifiant.setText("");
                }
            }

            @Override
            public void focusLost(FocusEvent e) {
                if (jTextField_identifiant.getText().equals("")) {
                    jTextField_identifiant.setText("Identifiant");
                }

                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }
        });

        jPasswordField.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                if (jPasswordField.getText().equals("Mot de passe")) {
                    jPasswordField.setText("");
                }
            }

            @Override
            public void focusLost(FocusEvent e) {
                if (jPasswordField.getText().equals("")) {
                    jPasswordField.setText("Mot de passe");
                }
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jTextField_identifiant = new javax.swing.JTextField();
        ConnectionButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPasswordField = new javax.swing.JPasswordField();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setLayout(null);

        jTextField_identifiant.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jTextField_identifiant.setForeground(new java.awt.Color(153, 153, 153));
        jTextField_identifiant.setText("Identifiant");
        jTextField_identifiant.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField_identifiantFocusGained(evt);
            }
        });
        jTextField_identifiant.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField_identifiantMouseClicked(evt);
            }
        });
        jTextField_identifiant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_identifiantActionPerformed(evt);
            }
        });
        jPanel2.add(jTextField_identifiant);
        jTextField_identifiant.setBounds(360, 160, 300, 50);

        ConnectionButton.setBackground(new java.awt.Color(225, 182, 0));
        ConnectionButton.setForeground(new java.awt.Color(0, 0, 0));
        ConnectionButton.setText("Se connecter");
        ConnectionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConnectionButtonActionPerformed(evt);
            }
        });
        jPanel2.add(ConnectionButton);
        ConnectionButton.setBounds(410, 310, 172, 44);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Donnees/52158504_577857816067012_2454202221978451968_n (1).png"))); // NOI18N
        jPanel2.add(jLabel3);
        jLabel3.setBounds(0, 10, 150, 140);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Donnees/Users2_37173.png"))); // NOI18N
        jPanel2.add(jLabel1);
        jLabel1.setBounds(280, 150, 70, 70);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Donnees/preferencesdesktopuserpassword_94510.png"))); // NOI18N
        jPanel2.add(jLabel4);
        jLabel4.setBounds(280, 220, 70, 80);

        jPasswordField.setText("Mot de passe");
        jPanel2.add(jPasswordField);
        jPasswordField.setBounds(360, 240, 300, 50);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Donnees/logoELDOrogne (1).png"))); // NOI18N
        jPanel2.add(jLabel5);
        jLabel5.setBounds(850, 10, 110, 90);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Donnees/City_Centre_Princeton_802.jpg"))); // NOI18N
        jPanel2.add(jLabel2);
        jLabel2.setBounds(0, 0, 960, 475);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 958, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 958, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 475, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ConnectionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConnectionButtonActionPerformed

        String mdpEntered = jPasswordField.getText();
        String idEntered = jTextField_identifiant.getText();
        DbConnection c = new DbConnection();
        boolean b = c.connexionP();
        if (b) {
            try {
                try {
                    String infoConBD = Cryptage.encryptMDP(idEntered, mdpEntered);
                    ArrayList<ArrayList<String>> mdpList = c.select("InfoConnexion,Spécialité", "personnel", "InfoConnexion = '" + infoConBD + "'");
                    boolean idMDPVerif = mdpList.get(0).contains(infoConBD);
                    if (idMDPVerif) {
                        String spe = mdpList.get(1).get(0);
                        JOptionPane.showMessageDialog(this, "Connexion établie ! Votre spécialité : " + spe);
                        switch (spe) {
                            case "MEDECIN":
//                            --------------------------- Traitement : ouvrir une fenêtre Accueil personnalisée
//                            AccueilManip3 accManip = new AccueilManip3();
//                            accManip.setVisible(true);
//                            ---------------------------------------------------------------------------------
                                JOptionPane.showMessageDialog(this, "Connexion du Médecin OK");
                                break;
                            case "SECRET":
                                JOptionPane.showMessageDialog(this, "Connexion du Secrétaire OK");
                                break;
                            case "INTERN":
                                JOptionPane.showMessageDialog(this, "Connexion de l'interne OK");
                                break;
                            case "MANIP":
                                JOptionPane.showMessageDialog(this, "Connexion du manipulateur radio OK");
                                break;
                            case "DECO":
                                JOptionPane.showMessageDialog(this, "Vous êtes déconnecté");
                            default:
                                throw new AssertionError();
                        }
                    } else if (idMDPVerif == false) {
                        JOptionPane.showMessageDialog(this, "Connexion impossible :\tCouple Identifiant / Mot de Passe non trouvé\n\t\tVeuillez réessayer");
                    }
                } catch (SQLException ex) {
                    ex.printStackTrace();
                    ex.getSQLState();
                    ex.getCause();
                    ex.getErrorCode();
                    JOptionPane.showMessageDialog(this, "Votre identifiant et/ou votre mot de passe sont erronés \n Veuillez réessayer", "Erreur", JOptionPane.WARNING_MESSAGE);
                } finally {
                    c.close();
                }
            } catch (NoSuchAlgorithmException ex) {
                Logger.getLogger(Connexion.class.getName()).log(Level.SEVERE, null, ex);
            } catch (NoSuchPaddingException ex) {
                Logger.getLogger(Connexion.class.getName()).log(Level.SEVERE, null, ex);
            } catch (InvalidKeyException ex) {
                Logger.getLogger(Connexion.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Connexion.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IllegalBlockSizeException ex) {
                Logger.getLogger(Connexion.class.getName()).log(Level.SEVERE, null, ex);
            } catch (BadPaddingException ex) {
                Logger.getLogger(Connexion.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_ConnectionButtonActionPerformed


    private void jTextField_identifiantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_identifiantActionPerformed


    }//GEN-LAST:event_jTextField_identifiantActionPerformed

    private void jTextField_identifiantMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField_identifiantMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_identifiantMouseClicked

    private void jTextField_identifiantFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_identifiantFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_identifiantFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Connexion.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Connexion.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Connexion.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Connexion.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Connexion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ConnectionButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPasswordField jPasswordField;
    private javax.swing.JTextField jTextField_identifiant;
    // End of variables declaration//GEN-END:variables
}
